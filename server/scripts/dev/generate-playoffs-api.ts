import "dotenv/config";

async function generatePlayoffsForReadyDivisions() {
  console.log("=== GENERANDO PLAYOFFS PARA DIVISIONES LISTAS ===");
  
  try {
    // Verificar si el servidor est√° corriendo
    const response = await fetch('http://localhost:3001/api/health', {
      method: 'GET',
    });
    
    if (!response.ok) {
      console.log("‚ùå El servidor no est√° corriendo en el puerto 3001");
      console.log("üí° Por favor, ejecuta 'npm run start:dev' en otra terminal primero");
      return;
    }
    
    console.log("‚úÖ Servidor encontrado, procediendo...");
    
    // Llamar al endpoint de generaci√≥n de playoffs
    console.log("\nüéØ Llamando a /season-transition/organize-playoffs...");
    
    const playoffResponse = await fetch('http://localhost:3001/season-transition/organize-playoffs', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
    });
    
    if (!playoffResponse.ok) {
      const errorText = await playoffResponse.text();
      console.error(`‚ùå Error en la respuesta: ${playoffResponse.status} - ${errorText}`);
      return;
    }
    
    const result = await playoffResponse.json();
    console.log("üéâ Respuesta exitosa:");
    console.log(JSON.stringify(result, null, 2));
    
    console.log("\n‚úÖ Generaci√≥n de playoffs completada");
    
  } catch (error) {
    console.error("‚ùå Error:", error);
    console.log("\nüí° Aseg√∫rate de que el servidor est√° corriendo con 'npm run start:dev'");
  }
}

generatePlayoffsForReadyDivisions();
